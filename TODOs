Movie DB TODOs

- [x] Setup project
    - [x] Bootstrap using CRA
    - [x] Install dependencies
        - [x] React Router
        - [x] Styled Components
        - [x] prop-types
    - [x] Create environmental variable for API key
    - [x] Create config.js for confirguration for the TMDB API
        - [x] API end points
        - [x] API URL and API key
        - [x] Request token URL
        - [x] Login URL
        - [x] Session ID URL 
        - [x] Image Base URL
        - [x] Background size
        - [x] Poster size
    - [x] Create API file for the API fetch/calls
    - [x] Create helper functions
        - [x] Convert time to hours and minutes
        - [x] Convert a number to money US format

- [x] Create Global Styles

- [x] Create Header Component
    - [x] Import rmdb and tmdb logos
    - [x] Create header styles in separate index.js file

- [x] Create Home Component
    - [x] Import styling, hooks, and images
    - [x] Export to main App
    - [x] Setup and test the fetch API for the homepage
    - [x] Create custom hook to fetch API

- [x] Create Hero Image Component
    - [x] Create styles 
        - [x] Wrapper  
        - [x] Content
        - [x] Text
    - [x] Map it to the home component
    - [x] Use custom hook to feed props back to Hero Image from home component

- [x] Create Grid component
    - [x] Create Grid styles
    - [x] Map grid to Home component
    - [x] 

- [x] Create Thumbnail component
    - [x] Create styled component for thumbnail
    - [x] Map thumbnail inside of Grid
    - [x] Send props(image src) back to Thumb component

- [x] Create Spinner component
    - [x] Style spinner with CSS animation via keyframes

- [x] Create SearchBar component
    - [x] Create index and styles
    - [x] Import search icon svg
    - [x] Import useEffect, useState, useRef
    - [x] Map to the Home component
    - [x] Make it a controlled component
        - [x] Input field always has same value as the state. State synced with input field.
    - [x] Create new searchTerm state in useHomeFetch to trigger the hook
    - [x] Create a timer that sets searchTerm with state after 500ms
    - [x] Create logical operator if searchTerm exists, change header and remove hero image

- [x] Create Load More button component 
    - [x] Create index and Styles
    - [x] Map to Home component
    - [x] Apply short circuit to only render if not loading
    - [x] Create fetch logic to load more movies
        - [x] onClick change setIsLoadingMore to true

- [x] Create Movie component page

- [x] Create Not Found component page


- [x] Create Routing with React Router
    - [x] Import BrowserRouter, Routes, and Route modules
    - [x] Wrap the App in BrowserRouter
    - [x] Create a route for Home, Movie, and Not Found
    - [x] Create Link route for the header logo
    - [x] Create a Link routing for the thumbnails

- [x] Create new custom hook useMovieFetch
    - [x] Use API to fetch the Movie, Credits, and Directors

- [x] Create BreadCrump component
    - [x] Create index and styles
    - [x] Pass in the movie title as a prop

- [x] Create MovieInfo component
    - [x] Create scaffolding for index and styles
    - [x] Map to our Movie page component
    - [x] Pass in the movie prop
    - [x] Render out the title, overview, rating, and director

- [x] Create MovieInfoBar Component
    - [x] Create styles and scaffolding
    - [x] Map to the Movie page component

- [x] Create Actors Component 
    - [x] Create index that displays image, name, and character
    - [x] Create styles
    - [x] Map to Movie component page, inside a grid component.
    - [x] iterate over actors to send back props to Actor component

