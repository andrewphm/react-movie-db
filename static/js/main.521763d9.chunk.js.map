{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","context.js","components/Header/index.js","config.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","API.js","helpers.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/index.js","components/Rate/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","components/Login.styles.js","components/Login.js","GlobalStyle.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LoginContainer","LogoImg","img","TMDBLogoImg","Context","createContext","UserProvider","children","useState","undefined","state","setState","Provider","value","Header","useContext","user","console","log","to","src","RMDBLogo","alt","className","username","href","target","rel","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","image","Text","HeroImage","title","text","Grid","header","Image","Thumb","movieId","clickable","Spinner","SearchBar","setSearchTerm","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","event","currentTarget","button","Button","callback","onClick","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","rating","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_pages","total_results","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","API","movies","prev","setItem","useHomeFetch","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","BreadCrumb","movieTitle","Rate","setValue","isRated","setIsRated","useParams","isLoading","setIsLoading","handleClick","e","min","max","backdrop","MovieInfo","vote_average","directors","length","director","name","credit_id","MovieInfoBar","budget","revenue","Actor","character","imageUrl","Movie","credits","crew","filter","member","job","actors","cast","useMovieFetch","runtime","actor","profile_path","NotFound","Login","login","setLogin","setUser","navigate","useNavigate","handleSubmit","innerText","demoUser","demoPassword","session_id","handleInput","htmlFor","required","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.521763d9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  max-width: var(--maxWidth);\n  padding: 20px 0;\n  margin: 0 auto;\n`;\n\nexport const LoginContainer = styled.div`\n  display: flex;\n  align-items: center;\n  column-gap: 1.5rem;\n\n  span {\n    color: white;\n    font-size: 1.3rem;\n  }\n`;\n\nexport const LogoImg = styled.img`\n  width: 200px;\n\n  @media screen and (max-width: 500px) {\n    width: 150px;\n  }\n`;\n\nexport const TMDBLogoImg = styled.img`\n  width: 100px;\n\n  @media (max-width: 500px) {\n    width: 80px;\n  }\n`;\n","import React, { useState, createContext } from 'react';\n\nexport const Context = createContext();\n\nconst UserProvider = ({ children }) => {\n  const [state, setState] = useState(undefined);\n\n  return (\n    <Context.Provider value={[state, setState]}>{children}</Context.Provider>\n  );\n};\n\nexport default UserProvider;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\n\n// Svg logos\nimport RMDBLogo from '../../images/react-movie-logo.svg';\nimport TMDBLogo from '../../images/tmdb_logo.svg';\n\n// Styles\nimport {\n  Wrapper,\n  Content,\n  LogoImg,\n  TMDBLogoImg,\n  LoginContainer,\n} from './Header.styles';\n\n// Context\nimport { Context } from '../../context';\n\nconst Header = () => {\n  const [user] = useContext(Context);\n\n  return (\n    <Wrapper>\n      {console.log(user)}\n      <Content>\n        <Link to=\"/react-movie-db\">\n          <LogoImg src={RMDBLogo} alt=\"rmdb-logo\" />\n        </Link>\n        <LoginContainer>\n          {user ? (\n            <span className=\"loggedin\">\n              <u>\n                Logged in as:{' '}\n                {user.username === 'gramsay' ? 'Demo' : user.username}\n              </u>\n            </span>\n          ) : (\n            <Link to=\"/login\">\n              <span className=\"login\">\n                <u>Log in</u>\n              </span>\n            </Link>\n          )}\n          <a\n            href=\"https://www.themoviedb.org/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <TMDBLogoImg src={TMDBLogo} alt=\"tmdb-logo\" />\n          </a>\n        </LoginContainer>\n      </Content>\n    </Wrapper>\n  );\n};\n\nexport default Header;\n","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    background: linear-gradient(\n        to bottom, rgba(0, 0, 0, 0)\n        41%, rgba(0, 0, 0, 0.65)\n        100%\n    ),\n    url(${({image}) => image}), var(--darkGrey);\n    background-size: 100%, cover;\n    background-position: center;\n    height: 600px;\n    position: relative;\n    animation: animateHeroImage 1s;\n\n    @keyframes animateHeroImage {\n        from {\n            opacity: 0;\n        }\n        to {\n            opacity: 1;\n        }\n    }\n`;\n\nexport const Content = styled.div`\n    padding: 20px;\n    max-width: var(--maxWidth);\n    margin: 0 auto;\n`;\n\nexport const Text = styled.div`\n    z-index: 100;\n    max-width: 700px;\n    position: absolute;\n    bottom: 40px;\n    marigin-right: 20px;\n    min-height: 100px;\n    color: var(--white);\n\n    h1 {\n        font-size: var(--fontSuperBig);\n\n        @media screen and (max-width: 720px){\n            font-size: var(--fontBig);\n        }\n    }\n\n    p {\n        font-size: var(--fontMed);\n\n        @media screen and (max-width: 720px) {\n            font-size: var(--fontSmall);\n        }\n    }\n\n    @media screen and (max-width: 720px) {\n        max-width: 100%;\n    }\n`;","import React from 'react';\nimport PropTypes from 'prop-types'\n\n// Styles\nimport { Wrapper, Content, Text } from './HeroImage.styles';\n\nconst HeroImage = ({ image, title, text }) => (\n    <Wrapper image={image}>\n        <Content>\n            <Text>\n                <h1>{title}</h1>\n                <p>{text}</p>\n            </Text>\n        </Content>\n    </Wrapper>\n)\n\nHeroImage.propTypes = {\n    image: PropTypes.string,\n    title: PropTypes.string,\n    text: PropTypes.string\n}\n\nexport default HeroImage;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    max-width: var(--maxWidth);\n    margin: 0 auto;\n    padding: 0 20px; \n\n    h1 {\n        color: var(--medGrey);\n\n        @media screen and (max-width: 768px){\n            font-size: var(--fontBig);\n        }\n    }\n`;\n\nexport const Content = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    grid-gap: 2rem;\n\n`;\n\n","import React from 'react';\nimport PropTypes from 'prop-types'\n\n// Styles\nimport { Wrapper, Content } from './Grid.styles';\n\nconst Grid = ({ header, children }) => (\n    <Wrapper>\n        <h1>{header}</h1>\n        <Content>\n            {children}\n        </Content>\n    </Wrapper>\n)\n\nGrid.propTypes = {\n    header: PropTypes.string\n}\n\nexport default Grid;","import styled from 'styled-components';\n\nexport const Image = styled.img`\n  width: 100%;\n  max-width: 720px;\n  transition: all 0.3s;\n  object-fit: cover;\n  border-radius: 20px;\n  animation: animateThumb 1s;\n  cursor: pointer;\n\n  :hover {\n    opacity: 0.8;\n    transform: translateY(-5px);\n  }\n\n  @keyframes animateThumb {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types'\n\n// Styles\nimport { Image } from './Thumb.styles'\n\nconst Thumb = ({ image, movieId, clickable }) => (\n    <div>\n        {clickable ? (\n            <Link to={`/${movieId}`}>\n                <Image src={image} alt='movie-thumb' />\n            </Link>\n        ) : (\n          <Image src={image} alt='movie-thumb' />\n        )}\n    </div>\n);\n\nThumb.propTypes = {\n    image: PropTypes.string,\n    movieId: PropTypes.number,\n    clickable: PropTypes.bool\n}\n\nexport default Thumb;","import { Spinner } from './Spinner.styles';\n\nexport default Spinner;","import styled from 'styled-components'\n\nexport const Spinner = styled.div`\n    border: 5px solid var(--lightGrey);\n    border-top: 5px solid var(--medGrey);\n    border-radius: 50%;\n    width: 50px;\n    height: 50px;\n    animation: spin 0.8s linear infinite;\n    margin: 20px auto;\n\n    @keyframes spin {\n        0% {\n            transform: rotate(0deg);\n        }\n        100% {\n            transform: rotate(360deg);\n        }\n    }\n`;","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n    height: 100px;\n    background: var(--darkGrey);\n    padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n    position: relative;\n    max-width: var(--maxWidth);\n    width: 100%;\n    height: 55px;\n    background: var(--medGrey);\n    margin: 0 auto;\n    border-radius: 40px;\n    color: var(--white);\n\n    img {\n        position: absolute;\n        left: 15px;\n        top: 14px;\n        width: 30px;\n    }\n\n    input {\n        font-size: var(--fontBig);\n        position: absolute;\n        left: 0;\n        margin: 8px 0;\n        padding: 0 0 0 60px;\n        border: 0;\n        width: 95%;\n        background: transparent;\n        height: 40px;\n        color: var(--white);\n\n        :focus{\n            outline: none;\n        }\n\n        @media screen and (max-width: 768px) {\n            font-size: 1.2rem;\n        }\n    }\n`;","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\n// Image\nimport searchIcon from '../../images/search-icon.svg';\n\n// Styles\nimport { Wrapper, Content } from './SearchBar.styles';\n\nconst SearchBar = ({ setSearchTerm }) => {\n  const [state, setState] = useState('');\n  // Using useRef to skip initial useEffect on render\n  const initial = useRef(true);\n\n  useEffect(() => {\n    // To skip the initial useEffect on render\n    if (initial.current) {\n      initial.current = false;\n      return;\n    }\n\n    const timer = setTimeout(() => {\n      setSearchTerm(state);\n    }, 500);\n\n    return () => clearTimeout(timer);\n  }, [setSearchTerm, state]);\n\n  return (\n    <Wrapper>\n      <Content>\n        <img src={searchIcon} alt=\"search-icon\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search Movie\"\n          // Using inline function to pass the value to the state\n          onChange={(event) => setState(event.currentTarget.value)}\n          value={state}\n        />\n      </Content>\n    </Wrapper>\n  );\n};\n\nSearchBar.propTypes = {\n  callback: PropTypes.func,\n};\n\nexport default SearchBar;\n","import styled from 'styled-components'\n\nexport const Wrapper = styled.button`\n    display: block;\n    background: var(--darkGrey);\n    width: 25%;\n    min-width: 200px;\n    height: 60px;\n    border-radius: 30px;\n    color: var(--white);\n    border: 0;\n    font-size: var(--fontBig);\n    margin: 20px auto;\n    transition: all 0.3s;\n    outline: none;\n    cursor: pointer;\n\n    :hover {\n        opacity: 0.8;\n    }\n\n`;","import React from 'react';\nimport PropTypes from 'prop-types'\n\n// Styles\nimport { Wrapper } from './Button.styles';\n\nconst Button = ({ text, callback }) => (\n    <Wrapper type=\"button\" onClick={callback}>\n        {text}\n    </Wrapper>\n)\n\nButton.propTypes = {\n    text: PropTypes.string,\n    callback: PropTypes.func\n}\n\nexport default Button;","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n\n  fetchMovie: async (movieId) => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n\n  fetchCredits: async (movieId) => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n\n  // Authentication\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken,\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData),\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken }),\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value }),\n      })\n    ).json();\n\n    return rating;\n  },\n};\n\nexport default apiSettings;\n","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n\n// Convert a number to money formatting\nexport const convertMoney = (money) => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n\n// Checks to see if there is movie data saved in session storage\nexport const isPersistedState = (stateName) => {\n  const sessionState = sessionStorage.getItem(stateName);\n  return sessionState && JSON.parse(sessionState);\n};\n","import { useState, useEffect } from 'react';\n// API\nimport API from '../API';\n\n// Helpers\nimport { isPersistedState } from '../helpers';\n\nconst initialState = {\n  page: 0,\n  results: [],\n  total_pages: 0,\n  total_results: 0,\n};\n\nexport const useHomeFetch = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // State to hold all the movies\n  const [state, setState] = useState(initialState);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  // Triggered by the button\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n\n  const fetchMovies = async (page, searchTerm = '') => {\n    try {\n      setError(false);\n      setLoading(true);\n\n      const movies = await API.fetchMovies(searchTerm, page);\n\n      setState((prev) => ({\n        ...movies,\n        results:\n          page > 1 ? [...prev.results, ...movies.results] : [...movies.results],\n      }));\n    } catch (error) {\n      setError(true);\n    }\n\n    setLoading(false);\n  };\n\n  // Initial and search\n  useEffect(() => {\n    if (!searchTerm) {\n      const sessionState = isPersistedState('homeState');\n\n      if (sessionState) {\n        setState(sessionState);\n        return;\n      }\n    }\n\n    setState(initialState);\n    fetchMovies(1, searchTerm);\n  }, [searchTerm]);\n\n  // Load More\n  useEffect(() => {\n    if (!isLoadingMore) return;\n\n    fetchMovies(state.page + 1, searchTerm);\n    setIsLoadingMore(false);\n  }, [isLoadingMore, state.page, searchTerm]);\n\n  // Write to sessionStorage\n  useEffect(() => {\n    if (!searchTerm) sessionStorage.setItem('homeState', JSON.stringify(state));\n  }, [searchTerm, state]);\n\n  return { state, loading, error, setSearchTerm, searchTerm, setIsLoadingMore };\n};\n","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","// Config\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from '../config';\n\n// Components\nimport HeroImage from './HeroImage';\nimport Grid from './Grid';\nimport Thumb from './Thumb';\nimport Spinner from './Spinner';\nimport SearchBar from './SearchBar';\nimport Button from './Button';\n\n// Custom Hook\nimport { useHomeFetch } from '../hooks/useHomeFetch';\n// Image\nimport NoImage from '../images/no_image.jpg';\n\nconst Home = () => {\n  // destructuring the objects from the useHomeFetch module\n  const { state, loading, error, setSearchTerm, searchTerm, setIsLoadingMore } =\n    useHomeFetch();\n\n  if (error) return <div>Something went wrong ...</div>;\n\n  return (\n    <>\n      {!searchTerm && state.results[0] ? (\n        <HeroImage\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\n          title={state.results[0].original_title}\n          text={state.results[0].overview}\n        />\n      ) : null}\n\n      <SearchBar setSearchTerm={setSearchTerm} />\n      <Grid header={searchTerm ? 'Search Results' : 'Popular Movies'}>\n        {state.results.map((movie) => (\n          <Thumb\n            key={movie.id}\n            clickable\n            image={\n              movie.poster_path\n                ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\n                : NoImage\n            }\n            movieId={movie.id}\n          />\n        ))}\n      </Grid>\n      {loading && <Spinner />}\n      {state.page < state.total_pages && !loading && (\n        <Button text=\"Load More\" callback={() => setIsLoadingMore(true)} />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 70px;\n    background: var(--medGrey);\n    color: var(--white);\n`;\n\nexport const Content = styled.div`\n    display: flex;\n    width: 100%;\n    max-width: var(--maxWidth);\n    padding: 0 20px;\n    \n    span {\n        font-size: var(--fontMed);\n        color: var(--white);\n        padding-right: 10px;\n\n        @media screen and (max-width: 768px){\n            font-size: var(--fontSmall);\n        }\n    }\n`;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types'\n\n\n// Styles\nimport { Wrapper, Content } from './BreadCrumb.styles';\n\nconst BreadCrumb = ({ movieTitle }) => (\n    <Wrapper>\n        <Content>\n            <Link to='/react-movie-db'>\n                <span>Home</span>\n            </Link>\n            <span>|</span>\n            <span>{movieTitle}</span>\n        </Content>\n    </Wrapper>\n)\n\nBreadCrumb.propTypes = {\n    movieTitle: PropTypes.string\n}\n\nexport default BreadCrumb;","import React, { useState, useContext } from 'react';\nimport { useParams } from 'react-router-dom';\n\n// API\nimport API from '../../API';\n\n// Component\nimport Spinner from '../Spinner';\n\n// Context\nimport { Context } from '../../context';\n\nconst Rate = () => {\n  const [value, setValue] = useState(5);\n  const [isRated, setIsRated] = useState(false);\n  const { movieId } = useParams();\n  const [user] = useContext(Context);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleClick = async () => {\n    setIsLoading(true);\n    const rating = await API.rateMovie(user.sessionId, movieId, value);\n    if (rating.success) {\n      setIsLoading(false);\n      setIsRated(true);\n    }\n  };\n\n  if (isLoading) return <Spinner />;\n\n  return (\n    <>\n      {isRated ? (\n        <div>\n          <p>Thank you for rating!</p>\n        </div>\n      ) : (\n        <div>\n          <input\n            onChange={(e) => setValue(e.target.value)}\n            type=\"range\"\n            min=\"1\"\n            max=\"10\"\n            value={value}\n          />\n          {value}\n          <p>\n            <button onClick={handleClick} type=\"text\">\n              Rate\n            </button>\n          </p>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Rate;\n","import styled from 'styled-components';\n\n// Image params\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\n\nexport const Wrapper = styled.div`\n  background: ${({ backdrop }) =>\n    backdrop ? `url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop})` : '#000'};\n  background-size: cover;\n  padding: 40px 20px;\n  animation: animateMovieInfo 1s;\n\n  @keyframes animateMovieInfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n  background: rgba(0, 0, 0, 0.7);\n  border-radius: 20px;\n\n  @media screen and (max-width: 768px) {\n    display: block;\n    max-height: none;\n  }\n`;\n\nexport const Text = styled.div`\n  width: 100%;\n  padding: 20px 40px;\n  color: var(--white);\n  overflow: hidden;\n\n  .rating-directors {\n    display: flex;\n    justify-content: flex-start;\n    margin-bottom: 2rem;\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: black;\n    font-weight: 800;\n    border-radius: 50%;\n    margin: 0;\n  }\n\n  .directors {\n    margin: 0 0 0 40px;\n\n    p {\n      margin: 0;\n    }\n  }\n\n  h1 {\n    @media screen and (max-width: 768px) {\n      font-size: var(--fontBig);\n    }\n  }\n\n  .rate {\n    margin-top: 1.5rem;\n\n    p {\n      font-size: 1.2rem;\n      margin-bottom: 1rem;\n    }\n  }\n\n  a {\n    color: white;\n    font-size: 1.2rem;\n  }\n`;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n// Components\nimport Thumb from '../Thumb';\nimport Rate from '../Rate';\n\n// Config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\n\n// Image\nimport NoImage from '../../images/no_image.jpg';\n\n// Styles\nimport { Wrapper, Content, Text } from './MovieInfo.styles';\n\n// Context\nimport { Context } from '../../context';\n\nconst MovieInfo = ({ movie }) => {\n  const [user] = useContext(Context);\n\n  return (\n    <Wrapper backdrop={movie.backdrop_path}>\n      <Content>\n        <Thumb\n          image={\n            movie.poster_path\n              ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n              : NoImage\n          }\n          clickable={false}\n          alt=\"movie-thumb\"\n        />\n        <Text>\n          <h1>{movie.title}</h1>\n\n          <h3>PLOT</h3>\n\n          <p>{movie.overview}</p>\n\n          <div className=\"rating-directors\">\n            <div>\n              <h3>RATING</h3>\n\n              <div className=\"score\">{movie.vote_average}</div>\n            </div>\n\n            <div className=\"directors\">\n              <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\n              {movie.directors.map((director) => (\n                <p key={director.credit_id}>{director.name}</p>\n              ))}\n            </div>\n          </div>\n          {user ? (\n            <div className=\"rate\">\n              <p>Rate the movie</p>\n              <Rate />\n            </div>\n          ) : (\n            <Link to=\"/login\">Login to leave a rating!</Link>\n          )}\n        </Text>\n      </Content>\n    </Wrapper>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object,\n};\n\nexport default MovieInfo;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  min-height: 100px;\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  max-width: var(--maxWidth);\n  width: 100%;\n  margin: 0 auto;\n  color: var(--white);\n\n  .column {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: var(--medGrey);\n    border-radius: 20px;\n    margin: 0 20px;\n    flex: 1;\n\n    :first-child {\n      margin-left: 0;\n    }\n\n    :last-child {\n      margin-right: 0;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    display: block;\n\n    .column {\n      margin: 20px 0;\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types'\n\n// Helpers\nimport { calcTime, convertMoney } from '../../helpers';\n\n// Styles\nimport { Wrapper, Content } from './MovieInfoBar.styles';\n\n\nconst MovieInfoBar = ({ time, budget, revenue }) => (\n    <Wrapper>\n        <Content>\n            <div className=\"column\">\n                <p>Running time: {calcTime(time)}</p>\n            </div>\n            \n            <div className=\"column\">\n                <p>Budget: {convertMoney(budget)}</p>\n            </div>\n\n            <div className=\"column\">\n                <p>Revenue: {convertMoney(revenue)}</p>\n            </div>\n\n        </Content>\n\n    </Wrapper>\n)\n\nMovieInfoBar.propTypes = {\n    time: PropTypes.number,\n    budget: PropTypes.number,\n    revenue: PropTypes.number\n}\n\nexport default MovieInfoBar;","import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n    color: var(--white);\n    background: var(--darkGrey);\n    border-radius: 20px;\n    padding: 5px;\n    text-align: center;\n\n    h3 {\n        margin: 10px 0 0 0;\n    }\n\n    p {\n        margin: 5px 0;\n    }\n`;\n\nexport const Image = styled.img`\n    display: block;\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 15px;\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Styles\nimport { Wrapper, Image } from './Actor.styles';\n\n\nconst Actor = ({ name, character, imageUrl }) => (\n    <Wrapper>\n        <Image src={imageUrl} alt='actor-thumb' />\n        <h3>{name}</h3>\n        <p>{character}</p>\n    </Wrapper>\n);\n\nActor.propTypes = {\n    name: PropTypes.string,\n    character: PropTypes.string,\n    imageUrl: PropTypes.string\n}\n\nexport default Actor;","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\n\n// Config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\n\n// Components\nimport Grid from './Grid';\nimport Spinner from './Spinner';\nimport BreadCrumb from './BreadCrumb';\nimport MovieInfo from './MovieInfo';\nimport MovieInfoBar from './MovieInfoBar';\nimport Actor from './Actor';\n\n// Hook\nimport { useMovieFetch } from '../hooks/useMovieFetch';\n\n// Image\nimport NoImage from '../images/no_image.jpg';\n\nconst Movie = () => {\n    // Grab the movieId using useParams hook\n    const { movieId } = useParams();\n\n    const { state: movie, loading, error } = useMovieFetch(movieId)\n    \n    if (loading) return <Spinner />\n    if (error) return <div>Something went wrong... </div>;\n\n    return (\n        <>\n            <BreadCrumb movieTitle={movie.original_title}/>\n            <MovieInfo movie={movie} />\n            <MovieInfoBar \n                time={movie.runtime} \n                budget={movie.budget} \n                revenue={movie.revenue}\n            />\n            <Grid header='Actors'>\n                {movie.actors.map(actor => (\n                    <Actor\n                        key={actor.credit_id}\n                        name={actor.name}\n                        character={actor.character}\n                        imageUrl={\n                            actor.profile_path\n                            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}` : NoImage\n                        }\n                    />\n                ))}\n            </Grid>\n        </>\n    )\n}\n\n\nexport default Movie;","import { useEffect, useState } from \"react\";\n\n// Helpers\nimport { isPersistedState } from '../helpers';\n\n// API\nimport API from '../API';\n\nexport const useMovieFetch = movieId => {\n    const [state, setState] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n\n\n    useEffect(() => {\n        const fetchMovie = async () => {\n            try {\n                setLoading(true);\n                setError(false);\n\n                const movie = await API.fetchMovie(movieId);\n                const credits = await API.fetchCredits(movieId);\n                // Get directors only\n                const directors = credits.crew.filter(\n                    member => member.job === 'Director'\n                )\n\n                setState({\n                    ...movie,\n                    actors: credits.cast,\n                    directors\n                })\n\n                setLoading(false);\n            } catch (error) {\n                setError(true);\n            }\n        };\n\n        const sessionState = isPersistedState(movieId);\n\n        if (sessionState) {\n            setState(sessionState)\n            setLoading(false)\n            return;\n        }\n\n        fetchMovie();\n    }, [movieId])\n\n\n    // Write to sessionStorage\n    useEffect(() => {\n        sessionStorage.setItem(movieId, JSON.stringify(state))\n    }, [movieId, state])\n\n    return { state, loading, error };\n}","import React from 'react';\n\nconst NotFound = () => <div>Not Found</div>\n\n\nexport default NotFound;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  align-content: center;\n  flex-direction: column;\n  max-width: 320px;\n  padding: 20px;\n  color: var(--darkGrey);\n  margin: 5rem auto;\n  background-color: lightgrey;\n  border-radius: 5px;\n  box-shadow: 0 1px 4px 2px rgba(0, 0, 0, 0.33);\n\n  input {\n    width: 100%auto;\n    height: 30px;\n    border: 1px solid var(--darkGrey);\n    border-radius: 20px;\n    margin: 10px 0;\n  }\n\n  input[type='text'],\n  input[type='password'] {\n    padding-left: 8px;\n  }\n\n  label {\n    font-weight: 900;\n  }\n\n  .error {\n    color: red;\n  }\n`;\n","import React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport API from '../API';\n\n// Components\nimport Button from './Button';\nimport Spinner from './Spinner';\n\n// Styles\nimport { Wrapper } from './Login.styles';\n\n// Context\nimport { Context } from '../context';\n\nconst initialState = { username: '', password: '' };\n\nconst Login = () => {\n  const [login, setLogin] = useState(initialState);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [user, setUser] = useContext(Context);\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    setError(false);\n    const { username, password } = login;\n    setIsLoading(true);\n    try {\n      // Demo account\n      if (e.target.innerText === 'Demo login') {\n        const demoUser = 'gramsay';\n        const demoPassword = process.env.REACT_APP_DEMO_PASSWORD;\n        const requestToken = await API.getRequestToken();\n        const sessionId = await API.authenticate(\n          requestToken,\n          demoUser,\n          demoPassword\n        );\n        await setUser({ sessionId: sessionId.session_id, username: demoUser });\n        setIsLoading(false);\n        navigate('/react-movie-db');\n        return;\n      }\n\n      const requestToken = await API.getRequestToken();\n      const sessionId = await API.authenticate(\n        requestToken,\n        username,\n        password\n      );\n      setUser({ sessionId: sessionId.session_id, username });\n      setIsLoading(false);\n      navigate('/react-movie-db');\n    } catch (error) {\n      setError(true);\n    }\n  };\n\n  const handleInput = (e) => {\n    setLogin({ ...login, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <Wrapper>\n      {error && <div className=\"error\">There was an error!</div>}\n      <label htmlFor=\"username\">Username: </label>\n      <input\n        type=\"text\"\n        value={login.username}\n        name=\"username\"\n        onChange={handleInput}\n        placeholder=\"username\"\n        required\n      />\n      <label htmlFor=\"password\">Password: </label>\n      <input\n        type=\"password\"\n        value={login.password}\n        name=\"password\"\n        onChange={handleInput}\n        placeholder=\"password\"\n        required\n      />\n      {isLoading && <Spinner />}\n      <Button text=\"Login\" callback={handleSubmit} />\n      <Button name=\"demo\" text=\"Demo login\" callback={handleSubmit} />\n    </Wrapper>\n  );\n};\n\nexport default Login;\n","import { createGlobalStyle } from \"styled-components\";\n\n\n\nexport const GlobalStyle = createGlobalStyle`\n    :root {\n        --maxWidth: 1280px;\n        --white: #fff;\n        --lightGrey: #eee;\n        --medGrey: #353535;\n        --darkGrey: #1c1c1c;\n        --fontSuperBig: 2.5rem;\n        --fontBig: 1.5rem;\n        --fontMed: 1.2rem;\n        --fontSmall: 1rem;\n    }\n\n    * {\n        box-sizing: border-box;\n        font-family: 'Abel', sans-serif;\n    }\n\n    body {\n        margin: 0;\n        padding: 0;\n\n        h1 {\n            font-size: 2rem;\n            font-weight: 600;\n            color: var(--white);\n        }\n\n        h3 {\n            font-size: 1.1rem;\n            font-weight: 600;\n        }\n\n        p {\n            font-size: 1rem;\n            color: var(--white);\n        }\n    }\n`;","import React from 'react';\n\n// Routing\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\n// Components\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Movie from './components/Movie';\nimport NotFound from './components/NotFound';\nimport Login from './components/Login';\n\n// Context\nimport UserProvider from './context';\n\n// Styles\nimport { GlobalStyle } from './GlobalStyle';\n\nconst App = () => (\n  <Router>\n    <UserProvider>\n      <Header />\n      <Routes>\n        <Route path=\"/react-movie-db\" element={<Home />} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/:movieId\" element={<Movie />} />\n        <Route path=\"/*\" element={<NotFound />} />\n      </Routes>\n      <GlobalStyle />\n    </UserProvider>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}